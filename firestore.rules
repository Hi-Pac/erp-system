rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Common functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isSupervisor() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'supervisor';
    }
    
    function isDocumentOwner(resource) {
      return isAuthenticated() && resource.data.createdBy == request.auth.uid;
    }
    
    // Users collection
    match /users/{userId} {
      // Only administrators can list all users
      // Users can only read their own documents
      allow read: if isAdmin() || request.auth.uid == userId;
      
      // Only administrators can create and update user roles
      allow create, update: if isAdmin();
      
      // Users cannot be deleted (soft delete only)
      allow delete: if false;
    }
    
    // Products collection
    match /products/{productId} {
      // Anyone authenticated can read products
      allow read: if isAuthenticated();
      
      // Only admins and supervisors can create and update
      allow create, update: if isAdmin() || isSupervisor();
      
      // Only admins can delete
      allow delete: if isAdmin();
    }
    
    // Customers collection
    match /customers/{customerId} {
      // Anyone authenticated can read customers
      allow read: if isAuthenticated();
      
      // Anyone authenticated can create customers
      allow create: if isAuthenticated();
      
      // Only admins, supervisors, and document creators can update
      allow update: if isAdmin() || isSupervisor() || isDocumentOwner(resource);
      
      // Only admins can delete
      allow delete: if isAdmin();
    }
    
    // Suppliers collection
    match /suppliers/{supplierId} {
      // Same rules as customers
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAdmin() || isSupervisor() || isDocumentOwner(resource);
      allow delete: if isAdmin();
    }
    
    // Sales (Invoices) collection
    match /invoices/{invoiceId} {
      // Anyone authenticated can read invoices
      allow read: if isAuthenticated();
      
      // Anyone authenticated can create invoices
      allow create: if isAuthenticated();
      
      // Only admins, supervisors, and document creators can update
      // Updates only allowed if status is not 'closed'
      allow update: if (isAdmin() || isSupervisor() || isDocumentOwner(resource)) &&
                     (resource.data.status != 'closed' || request.resource.data.status == 'closed');
      
      // Only admins can delete
      allow delete: if isAdmin();
    }
    
    // Return Invoices collection
    match /returnInvoices/{returnId} {
      // Same rules as invoices
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if (isAdmin() || isSupervisor() || isDocumentOwner(resource)) &&
                    (resource.data.status != 'closed' || request.resource.data.status == 'closed');
      allow delete: if isAdmin();
    }
    
    // Payments collection
    match /payments/{paymentId} {
      // Anyone authenticated can read payments
      allow read: if isAuthenticated();
      
      // Anyone authenticated can create payments
      allow create: if isAuthenticated();
      
      // Only admins, supervisors, and document creators can update
      // Updates only allowed if payment is not confirmed
      allow update: if (isAdmin() || isSupervisor() || isDocumentOwner(resource)) &&
                    (resource.data.confirmed != true || request.resource.data.confirmed == true);
      
      // Only admins can delete
      allow delete: if isAdmin();
    }
    
    // Settings collection
    match /settings/{settingId} {
      // Anyone authenticated can read settings
      allow read: if isAuthenticated();
      
      // Only admins can create, update or delete settings
      allow create, update, delete: if isAdmin();
    }
  }
}